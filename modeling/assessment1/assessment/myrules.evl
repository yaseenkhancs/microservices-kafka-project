context Assessment {

	constraint AtLeastOneMS {
	
		check: self.microservices.size() >= 1
		
		message: "Your project must have at least one microservice."
	
	
	}

}

context Event {

	constraint UsedAtLeastOnce {
	
		check : self.relatedProducers.size() + self.relatedConsumers.size() + self.relatedStreams.size() >= 1
		
		message: "Your event titled " + self.eventName + " must be used in at least one event stream."
	
	}

	constraint HasProducerAndConsumer {
	
		check : self.relatedProducers.size() >= 1 and self.relatedConsumers.size() >= 1 
		
		message: "Your event titled " + self.eventName + " must have one producer and one consumer"
	
	}
}


context Domain {

	constraint NamePresent {
		
		check: self.name.length() >= 1
		
		message: "The domain must have a name."
	}

	constraint DoesNotStartWithNumber {
	
		guard: self.satisfies("NamePresent")
		
		check {
			var c = self.name.charAt(0);
			return not(c.isInteger());
		}
		
		message: "The name of a domain cannot start with a number - your domain starts with '" + self.name.charAt(0) + "'"
	}

}

context HttpMethod {

	constraint PathPresent {
	
		check: self.path.length() >= 1
		
		message: "There must be a given http path for a http method."
	
	}
	
	constraint NoSpaces {
	
		guard: self.satisfies("PathPresent")
	
		check {
		
//			return self.path.matches([ \t\n\x0B\f\r]);
					
			var i : Integer = 0;
			var x : Boolean = true;
			
			//  I have to do this because EOL refuses to recognise 
			//  "\\s" or ["\\s"] as regex to search for any whitespaces 
			//  present in a string. It only recognises a single whitespace.
			//  I checked this regex with Java and it works fine, just not
			//  fine in EOL. So I have to use this loop. Thanks for reading.
			
			while (i < self.path.length()) { 
				if (self.path.characterAt(i).matches("\\s")) {
					x = false;
				}
				i++;
			}
			return x;
		}
		
		message: "there cannot be spaces in a http method."
	
	}
	

}
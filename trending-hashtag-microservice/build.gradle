plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.10"
}

version = "0.1"
group = "uk.ac.york.eng2.trending"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.kafka:micronaut-kafka")
    implementation("io.micronaut.kafka:micronaut-kafka-streams")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
    annotationProcessor("io.micronaut:micronaut-graal")
    implementation("com.google.guava:guava:32.1.2-jre")
    compileOnly("org.graalvm.nativeimage:svm")
}


application {
    mainClass.set("uk.ac.york.eng2.trending.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative {
  toolchainDetection = false
  binaries.configureEach {
    buildArgs.add('-H:IncludeResources="librocksdbjni-linux64.*"')
    buildArgs.add('-H:IncludeResources="kafka/kafka-streams-version.properties"')
    buildArgs.add('-H:JNIConfigurationFiles=resources/kafka-streams/jni-config.json')
  }
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("uk.ac.york.eng2.trending.*")
    }
}

tasks.named("dockerfile") {
  baseImage = "eclipse-temurin:11-alpine"
  instruction "RUN apk add --no-cache libstdc++ gcompat"
}



